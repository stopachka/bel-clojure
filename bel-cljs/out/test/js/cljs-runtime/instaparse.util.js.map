{"version":3,"sources":["instaparse/util.cljc"],"mappings":";AAIA,AAAA,0CAAA,kDAAAA,5FAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,6EAAAF;;;AAAA,AAAA,CAAA,+EAAA,/EAAME,0FACDI;AADL,AAEE,IAAcC,OAAK,AAACC,8CAAMC,cAAIH;AAA9B,AACE,MAAIC;;;AAHR,CAAA,kEAAA,lEAAML;;AAAN;AAAA,CAAA,4DAAA,WAAAC,vEAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAOA,AAAA,mDAAA,2DAAAP,9GAAMc;AAAN,AAAA,IAAAb,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAa,sFAAAV;;;AAAA,AAAA,CAAA,wFAAA,xFAAMU,mGACDJ;AADL,AAEE,IAAcC,OAAK,AAACC,8CAAMC,cAAIH;AAA9B,AACE,MAAIC;;;AAHR,CAAA,2EAAA,3EAAMG;;AAAN;AAAA,CAAA,qEAAA,WAAAC,hFAAMD;AAAN,AAAA,IAAAN,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAM;;;AAAA,AAQI,+BAAA,/BAAMC,sEAAcC;AAApB,AACE,IAAAC,WAAA;IAAAA,eAAA,yDAAAA,vCACE,AAAcD,eAAI,CAAAC,SAAA;IADpBA,eAAA,4DAAAA,1CAEE,AAAaD,cAAI,CAAAC,aAAA;AAFnB,AAAA,oBAGE,AAAWD;AAAI,QAAAC,aAAA;;AAHjBA","names":["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","instaparse.util/throw-runtime-exception","seq23119","self__5755__auto__","cljs.core/seq","message","text","cljs.core.apply","cljs.core/str","instaparse.util/throw-illegal-argument-exception","seq23122","instaparse.util/regexp-flags","re","G__23125"],"sourcesContent":["(ns instaparse.util)\r\n\r\n;; Both appear to be called with several strings as separate\r\n;; arguments:\r\n(defn throw-runtime-exception\r\n  [& message]\r\n  (let [^String text (apply str message)]\r\n    (-> text\r\n        #?(:clj RuntimeException.)\r\n        throw)))\r\n\r\n(defn throw-illegal-argument-exception\r\n  [& message]\r\n  (let [^String text (apply str message)]\r\n    (-> text\r\n        #?(:clj IllegalArgumentException.)\r\n        throw)))\r\n\r\n#?(:cljs\r\n    (defn regexp-flags [re]\r\n      (cond-> \"\"\r\n        (.-ignoreCase re) (str \"i\")\r\n        (.-multiline re) (str \"m\")\r\n        (.-unicode re) (str \"u\"))))\r\n"]}