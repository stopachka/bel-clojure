{"version":3,"sources":["shadow/test/env.cljs"],"mappings":"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","names":["js/goog.define","shadow.test.env/UI-DRIVEN","js/shadow","js/shadow.test","js/shadow.test.env","js/shadow.test.env.tests-ref","shadow.test.env/tests-ref","cljs.core.atom","shadow.test.env/reset-test-data!","test-data","cljs.core.swap_BANG_","cljs.core/assoc","shadow.test.env/get-tests","cljs.core/deref","cljs.core.get","shadow.test.env/get-test-vars","iter__5523__auto__","s__21125","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","xs__6360__auto__","vec__21133","cljs.core/first","cljs.core.nth","iterys__5519__auto__","s__21127","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__21129","cljs.core/chunk-buffer","i__21128","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__21126","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","fs__5520__auto__","cljs.core.concat","iter__21124","ns","ns-info","var","js/Error","shadow.test.env/get-test-ns-info","cljs.core/Symbol","cljs.core.get_in","shadow.test.env/get-test-namespaces","cljs.core/keys","shadow.test.env/get-test-count","s__21146","b__21148","i__21147","map__21150","cljs.core/--destructure-map","iter__21145","map__21152","vars","test-ns","cljs.core/vals","cljs.core.reduce","cljs.core/+","cljs.core/chunk-first"],"sourcesContent":["(ns shadow.test.env\n  (:require-macros [shadow.test.env]))\n\n(goog-define UI-DRIVEN false)\n\n;; this should be how cljs.test works out of the box IMHO\n;; all those macros don't compose and make writing testing utilities painful\n;; (eg. you have to recompile the namespace containing the macro to pick up new tests)\n;; only the macros were replaced, the functionality remains unchanged\n(defonce tests-ref (atom {:namespaces {}}))\n\n(defn reset-test-data! [test-data]\n  (swap! tests-ref assoc :namespaces test-data))\n\n(defn get-tests []\n  (get @tests-ref :namespaces))\n\n(defn get-test-vars []\n  (for [[ns ns-info] (get-tests)\n        var (:vars ns-info)]\n    var))\n\n(defn get-test-ns-info [ns]\n  {:pre [(symbol? ns)]}\n  (get-in @tests-ref [:namespaces ns]))\n\n(defn get-test-namespaces\n  \"returns all the registered test namespaces and symbols\n   use (get-test-ns-info the-sym) to get the details\"\n  []\n  (-> @tests-ref (:namespaces) (keys)))\n\n(defn get-test-count []\n  (->> (for [{:keys [vars] :as test-ns} (-> @tests-ref (:namespaces) (vals))]\n         (count vars))\n       (reduce + 0)))"]}